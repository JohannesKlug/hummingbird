// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CCSDSMessageTypes.proto

package com.logica.hummingbird.commons;

public final class CCSDSMessageTypes {
  private CCSDSMessageTypes() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class CCSDSParameter extends
      com.google.protobuf.GeneratedMessage {
    // Use CCSDSParameter.newBuilder() to construct.
    private CCSDSParameter() {
      initFields();
    }
    private CCSDSParameter(boolean noInit) {}
    
    private static final CCSDSParameter defaultInstance;
    public static CCSDSParameter getDefaultInstance() {
      return defaultInstance;
    }
    
    public CCSDSParameter getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.logica.hummingbird.commons.CCSDSMessageTypes.internal_static_commons_CCSDSParameter_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.logica.hummingbird.commons.CCSDSMessageTypes.internal_static_commons_CCSDSParameter_fieldAccessorTable;
    }
    
    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // required string value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private boolean hasValue;
    private java.lang.String value_ = "";
    public boolean hasValue() { return hasValue; }
    public java.lang.String getValue() { return value_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasName) return false;
      if (!hasValue) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasName()) {
        output.writeString(1, getName());
      }
      if (hasValue()) {
        output.writeString(2, getValue());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getName());
      }
      if (hasValue()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getValue());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSParameter parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSParameter parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSParameter parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSParameter parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSParameter parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSParameter parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSParameter parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSParameter parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSParameter parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSParameter parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSParameter prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSParameter result;
      
      // Construct using com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSParameter.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSParameter();
        return builder;
      }
      
      protected com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSParameter internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSParameter();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSParameter.getDescriptor();
      }
      
      public com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSParameter getDefaultInstanceForType() {
        return com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSParameter.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSParameter build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSParameter buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSParameter buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSParameter returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSParameter) {
          return mergeFrom((com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSParameter)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSParameter other) {
        if (other == com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSParameter.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setName(input.readString());
              break;
            }
            case 18: {
              setValue(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string name = 1;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // required string value = 2;
      public boolean hasValue() {
        return result.hasValue();
      }
      public java.lang.String getValue() {
        return result.getValue();
      }
      public Builder setValue(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder clearValue() {
        result.hasValue = false;
        result.value_ = getDefaultInstance().getValue();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:commons.CCSDSParameter)
    }
    
    static {
      defaultInstance = new CCSDSParameter(true);
      com.logica.hummingbird.commons.CCSDSMessageTypes.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:commons.CCSDSParameter)
  }
  
  public static final class CCSDSPacket extends
      com.google.protobuf.GeneratedMessage {
    // Use CCSDSPacket.newBuilder() to construct.
    private CCSDSPacket() {
      initFields();
    }
    private CCSDSPacket(boolean noInit) {}
    
    private static final CCSDSPacket defaultInstance;
    public static CCSDSPacket getDefaultInstance() {
      return defaultInstance;
    }
    
    public CCSDSPacket getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.logica.hummingbird.commons.CCSDSMessageTypes.internal_static_commons_CCSDSPacket_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.logica.hummingbird.commons.CCSDSMessageTypes.internal_static_commons_CCSDSPacket_fieldAccessorTable;
    }
    
    // required uint32 CCSDS_VERSION = 1;
    public static final int CCSDS_VERSION_FIELD_NUMBER = 1;
    private boolean hasCCSDSVERSION;
    private int cCSDSVERSION_ = 0;
    public boolean hasCCSDSVERSION() { return hasCCSDSVERSION; }
    public int getCCSDSVERSION() { return cCSDSVERSION_; }
    
    // required uint32 CCSDS_TYPE = 2;
    public static final int CCSDS_TYPE_FIELD_NUMBER = 2;
    private boolean hasCCSDSTYPE;
    private int cCSDSTYPE_ = 0;
    public boolean hasCCSDSTYPE() { return hasCCSDSTYPE; }
    public int getCCSDSTYPE() { return cCSDSTYPE_; }
    
    // required uint32 CCSDS_SEC_HD = 3;
    public static final int CCSDS_SEC_HD_FIELD_NUMBER = 3;
    private boolean hasCCSDSSECHD;
    private int cCSDSSECHD_ = 0;
    public boolean hasCCSDSSECHD() { return hasCCSDSSECHD; }
    public int getCCSDSSECHD() { return cCSDSSECHD_; }
    
    // required uint32 CCSDS_APID = 4;
    public static final int CCSDS_APID_FIELD_NUMBER = 4;
    private boolean hasCCSDSAPID;
    private int cCSDSAPID_ = 0;
    public boolean hasCCSDSAPID() { return hasCCSDSAPID; }
    public int getCCSDSAPID() { return cCSDSAPID_; }
    
    // required uint32 CCSDS_GP_FLAGS = 5;
    public static final int CCSDS_GP_FLAGS_FIELD_NUMBER = 5;
    private boolean hasCCSDSGPFLAGS;
    private int cCSDSGPFLAGS_ = 0;
    public boolean hasCCSDSGPFLAGS() { return hasCCSDSGPFLAGS; }
    public int getCCSDSGPFLAGS() { return cCSDSGPFLAGS_; }
    
    // required uint32 CCSDS_SSC = 6;
    public static final int CCSDS_SSC_FIELD_NUMBER = 6;
    private boolean hasCCSDSSSC;
    private int cCSDSSSC_ = 0;
    public boolean hasCCSDSSSC() { return hasCCSDSSSC; }
    public int getCCSDSSSC() { return cCSDSSSC_; }
    
    // required uint32 CCSDS_PLENGTH = 7;
    public static final int CCSDS_PLENGTH_FIELD_NUMBER = 7;
    private boolean hasCCSDSPLENGTH;
    private int cCSDSPLENGTH_ = 0;
    public boolean hasCCSDSPLENGTH() { return hasCCSDSPLENGTH; }
    public int getCCSDSPLENGTH() { return cCSDSPLENGTH_; }
    
    // repeated .commons.CCSDSParameter TMParameters = 8;
    public static final int TMPARAMETERS_FIELD_NUMBER = 8;
    private java.util.List<com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSParameter> tMParameters_ =
      java.util.Collections.emptyList();
    public java.util.List<com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSParameter> getTMParametersList() {
      return tMParameters_;
    }
    public int getTMParametersCount() { return tMParameters_.size(); }
    public com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSParameter getTMParameters(int index) {
      return tMParameters_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasCCSDSVERSION) return false;
      if (!hasCCSDSTYPE) return false;
      if (!hasCCSDSSECHD) return false;
      if (!hasCCSDSAPID) return false;
      if (!hasCCSDSGPFLAGS) return false;
      if (!hasCCSDSSSC) return false;
      if (!hasCCSDSPLENGTH) return false;
      for (com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSParameter element : getTMParametersList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasCCSDSVERSION()) {
        output.writeUInt32(1, getCCSDSVERSION());
      }
      if (hasCCSDSTYPE()) {
        output.writeUInt32(2, getCCSDSTYPE());
      }
      if (hasCCSDSSECHD()) {
        output.writeUInt32(3, getCCSDSSECHD());
      }
      if (hasCCSDSAPID()) {
        output.writeUInt32(4, getCCSDSAPID());
      }
      if (hasCCSDSGPFLAGS()) {
        output.writeUInt32(5, getCCSDSGPFLAGS());
      }
      if (hasCCSDSSSC()) {
        output.writeUInt32(6, getCCSDSSSC());
      }
      if (hasCCSDSPLENGTH()) {
        output.writeUInt32(7, getCCSDSPLENGTH());
      }
      for (com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSParameter element : getTMParametersList()) {
        output.writeMessage(8, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasCCSDSVERSION()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getCCSDSVERSION());
      }
      if (hasCCSDSTYPE()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, getCCSDSTYPE());
      }
      if (hasCCSDSSECHD()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, getCCSDSSECHD());
      }
      if (hasCCSDSAPID()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, getCCSDSAPID());
      }
      if (hasCCSDSGPFLAGS()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, getCCSDSGPFLAGS());
      }
      if (hasCCSDSSSC()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, getCCSDSSSC());
      }
      if (hasCCSDSPLENGTH()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, getCCSDSPLENGTH());
      }
      for (com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSParameter element : getTMParametersList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSPacket parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSPacket parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSPacket parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSPacket parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSPacket parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSPacket parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSPacket parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSPacket parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSPacket parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSPacket parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSPacket prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSPacket result;
      
      // Construct using com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSPacket.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSPacket();
        return builder;
      }
      
      protected com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSPacket internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSPacket();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSPacket.getDescriptor();
      }
      
      public com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSPacket getDefaultInstanceForType() {
        return com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSPacket.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSPacket build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSPacket buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSPacket buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.tMParameters_ != java.util.Collections.EMPTY_LIST) {
          result.tMParameters_ =
            java.util.Collections.unmodifiableList(result.tMParameters_);
        }
        com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSPacket returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSPacket) {
          return mergeFrom((com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSPacket)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSPacket other) {
        if (other == com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSPacket.getDefaultInstance()) return this;
        if (other.hasCCSDSVERSION()) {
          setCCSDSVERSION(other.getCCSDSVERSION());
        }
        if (other.hasCCSDSTYPE()) {
          setCCSDSTYPE(other.getCCSDSTYPE());
        }
        if (other.hasCCSDSSECHD()) {
          setCCSDSSECHD(other.getCCSDSSECHD());
        }
        if (other.hasCCSDSAPID()) {
          setCCSDSAPID(other.getCCSDSAPID());
        }
        if (other.hasCCSDSGPFLAGS()) {
          setCCSDSGPFLAGS(other.getCCSDSGPFLAGS());
        }
        if (other.hasCCSDSSSC()) {
          setCCSDSSSC(other.getCCSDSSSC());
        }
        if (other.hasCCSDSPLENGTH()) {
          setCCSDSPLENGTH(other.getCCSDSPLENGTH());
        }
        if (!other.tMParameters_.isEmpty()) {
          if (result.tMParameters_.isEmpty()) {
            result.tMParameters_ = new java.util.ArrayList<com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSParameter>();
          }
          result.tMParameters_.addAll(other.tMParameters_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setCCSDSVERSION(input.readUInt32());
              break;
            }
            case 16: {
              setCCSDSTYPE(input.readUInt32());
              break;
            }
            case 24: {
              setCCSDSSECHD(input.readUInt32());
              break;
            }
            case 32: {
              setCCSDSAPID(input.readUInt32());
              break;
            }
            case 40: {
              setCCSDSGPFLAGS(input.readUInt32());
              break;
            }
            case 48: {
              setCCSDSSSC(input.readUInt32());
              break;
            }
            case 56: {
              setCCSDSPLENGTH(input.readUInt32());
              break;
            }
            case 66: {
              com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSParameter.Builder subBuilder = com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSParameter.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addTMParameters(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required uint32 CCSDS_VERSION = 1;
      public boolean hasCCSDSVERSION() {
        return result.hasCCSDSVERSION();
      }
      public int getCCSDSVERSION() {
        return result.getCCSDSVERSION();
      }
      public Builder setCCSDSVERSION(int value) {
        result.hasCCSDSVERSION = true;
        result.cCSDSVERSION_ = value;
        return this;
      }
      public Builder clearCCSDSVERSION() {
        result.hasCCSDSVERSION = false;
        result.cCSDSVERSION_ = 0;
        return this;
      }
      
      // required uint32 CCSDS_TYPE = 2;
      public boolean hasCCSDSTYPE() {
        return result.hasCCSDSTYPE();
      }
      public int getCCSDSTYPE() {
        return result.getCCSDSTYPE();
      }
      public Builder setCCSDSTYPE(int value) {
        result.hasCCSDSTYPE = true;
        result.cCSDSTYPE_ = value;
        return this;
      }
      public Builder clearCCSDSTYPE() {
        result.hasCCSDSTYPE = false;
        result.cCSDSTYPE_ = 0;
        return this;
      }
      
      // required uint32 CCSDS_SEC_HD = 3;
      public boolean hasCCSDSSECHD() {
        return result.hasCCSDSSECHD();
      }
      public int getCCSDSSECHD() {
        return result.getCCSDSSECHD();
      }
      public Builder setCCSDSSECHD(int value) {
        result.hasCCSDSSECHD = true;
        result.cCSDSSECHD_ = value;
        return this;
      }
      public Builder clearCCSDSSECHD() {
        result.hasCCSDSSECHD = false;
        result.cCSDSSECHD_ = 0;
        return this;
      }
      
      // required uint32 CCSDS_APID = 4;
      public boolean hasCCSDSAPID() {
        return result.hasCCSDSAPID();
      }
      public int getCCSDSAPID() {
        return result.getCCSDSAPID();
      }
      public Builder setCCSDSAPID(int value) {
        result.hasCCSDSAPID = true;
        result.cCSDSAPID_ = value;
        return this;
      }
      public Builder clearCCSDSAPID() {
        result.hasCCSDSAPID = false;
        result.cCSDSAPID_ = 0;
        return this;
      }
      
      // required uint32 CCSDS_GP_FLAGS = 5;
      public boolean hasCCSDSGPFLAGS() {
        return result.hasCCSDSGPFLAGS();
      }
      public int getCCSDSGPFLAGS() {
        return result.getCCSDSGPFLAGS();
      }
      public Builder setCCSDSGPFLAGS(int value) {
        result.hasCCSDSGPFLAGS = true;
        result.cCSDSGPFLAGS_ = value;
        return this;
      }
      public Builder clearCCSDSGPFLAGS() {
        result.hasCCSDSGPFLAGS = false;
        result.cCSDSGPFLAGS_ = 0;
        return this;
      }
      
      // required uint32 CCSDS_SSC = 6;
      public boolean hasCCSDSSSC() {
        return result.hasCCSDSSSC();
      }
      public int getCCSDSSSC() {
        return result.getCCSDSSSC();
      }
      public Builder setCCSDSSSC(int value) {
        result.hasCCSDSSSC = true;
        result.cCSDSSSC_ = value;
        return this;
      }
      public Builder clearCCSDSSSC() {
        result.hasCCSDSSSC = false;
        result.cCSDSSSC_ = 0;
        return this;
      }
      
      // required uint32 CCSDS_PLENGTH = 7;
      public boolean hasCCSDSPLENGTH() {
        return result.hasCCSDSPLENGTH();
      }
      public int getCCSDSPLENGTH() {
        return result.getCCSDSPLENGTH();
      }
      public Builder setCCSDSPLENGTH(int value) {
        result.hasCCSDSPLENGTH = true;
        result.cCSDSPLENGTH_ = value;
        return this;
      }
      public Builder clearCCSDSPLENGTH() {
        result.hasCCSDSPLENGTH = false;
        result.cCSDSPLENGTH_ = 0;
        return this;
      }
      
      // repeated .commons.CCSDSParameter TMParameters = 8;
      public java.util.List<com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSParameter> getTMParametersList() {
        return java.util.Collections.unmodifiableList(result.tMParameters_);
      }
      public int getTMParametersCount() {
        return result.getTMParametersCount();
      }
      public com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSParameter getTMParameters(int index) {
        return result.getTMParameters(index);
      }
      public Builder setTMParameters(int index, com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSParameter value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.tMParameters_.set(index, value);
        return this;
      }
      public Builder setTMParameters(int index, com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSParameter.Builder builderForValue) {
        result.tMParameters_.set(index, builderForValue.build());
        return this;
      }
      public Builder addTMParameters(com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSParameter value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.tMParameters_.isEmpty()) {
          result.tMParameters_ = new java.util.ArrayList<com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSParameter>();
        }
        result.tMParameters_.add(value);
        return this;
      }
      public Builder addTMParameters(com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSParameter.Builder builderForValue) {
        if (result.tMParameters_.isEmpty()) {
          result.tMParameters_ = new java.util.ArrayList<com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSParameter>();
        }
        result.tMParameters_.add(builderForValue.build());
        return this;
      }
      public Builder addAllTMParameters(
          java.lang.Iterable<? extends com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSParameter> values) {
        if (result.tMParameters_.isEmpty()) {
          result.tMParameters_ = new java.util.ArrayList<com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSParameter>();
        }
        super.addAll(values, result.tMParameters_);
        return this;
      }
      public Builder clearTMParameters() {
        result.tMParameters_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:commons.CCSDSPacket)
    }
    
    static {
      defaultInstance = new CCSDSPacket(true);
      com.logica.hummingbird.commons.CCSDSMessageTypes.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:commons.CCSDSPacket)
  }
  
  public static final class CCSDSFrame extends
      com.google.protobuf.GeneratedMessage {
    // Use CCSDSFrame.newBuilder() to construct.
    private CCSDSFrame() {
      initFields();
    }
    private CCSDSFrame(boolean noInit) {}
    
    private static final CCSDSFrame defaultInstance;
    public static CCSDSFrame getDefaultInstance() {
      return defaultInstance;
    }
    
    public CCSDSFrame getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.logica.hummingbird.commons.CCSDSMessageTypes.internal_static_commons_CCSDSFrame_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.logica.hummingbird.commons.CCSDSMessageTypes.internal_static_commons_CCSDSFrame_fieldAccessorTable;
    }
    
    // required uint32 CCSDS_FVERSION = 1;
    public static final int CCSDS_FVERSION_FIELD_NUMBER = 1;
    private boolean hasCCSDSFVERSION;
    private int cCSDSFVERSION_ = 0;
    public boolean hasCCSDSFVERSION() { return hasCCSDSFVERSION; }
    public int getCCSDSFVERSION() { return cCSDSFVERSION_; }
    
    // required uint32 CCSDS_SC_ID = 2;
    public static final int CCSDS_SC_ID_FIELD_NUMBER = 2;
    private boolean hasCCSDSSCID;
    private int cCSDSSCID_ = 0;
    public boolean hasCCSDSSCID() { return hasCCSDSSCID; }
    public int getCCSDSSCID() { return cCSDSSCID_; }
    
    // required uint32 CCSDS_TF_VC = 3;
    public static final int CCSDS_TF_VC_FIELD_NUMBER = 3;
    private boolean hasCCSDSTFVC;
    private int cCSDSTFVC_ = 0;
    public boolean hasCCSDSTFVC() { return hasCCSDSTFVC; }
    public int getCCSDSTFVC() { return cCSDSTFVC_; }
    
    // required uint32 CCSDS_OP_CTRL = 4;
    public static final int CCSDS_OP_CTRL_FIELD_NUMBER = 4;
    private boolean hasCCSDSOPCTRL;
    private int cCSDSOPCTRL_ = 0;
    public boolean hasCCSDSOPCTRL() { return hasCCSDSOPCTRL; }
    public int getCCSDSOPCTRL() { return cCSDSOPCTRL_; }
    
    // required uint32 CCSDS_MS_CNT = 5;
    public static final int CCSDS_MS_CNT_FIELD_NUMBER = 5;
    private boolean hasCCSDSMSCNT;
    private int cCSDSMSCNT_ = 0;
    public boolean hasCCSDSMSCNT() { return hasCCSDSMSCNT; }
    public int getCCSDSMSCNT() { return cCSDSMSCNT_; }
    
    // required uint32 CCSDS_VC_CNT = 6;
    public static final int CCSDS_VC_CNT_FIELD_NUMBER = 6;
    private boolean hasCCSDSVCCNT;
    private int cCSDSVCCNT_ = 0;
    public boolean hasCCSDSVCCNT() { return hasCCSDSVCCNT; }
    public int getCCSDSVCCNT() { return cCSDSVCCNT_; }
    
    // required uint32 CCSDS_TF_SECH = 7;
    public static final int CCSDS_TF_SECH_FIELD_NUMBER = 7;
    private boolean hasCCSDSTFSECH;
    private int cCSDSTFSECH_ = 0;
    public boolean hasCCSDSTFSECH() { return hasCCSDSTFSECH; }
    public int getCCSDSTFSECH() { return cCSDSTFSECH_; }
    
    // required uint32 CCSDS_TF_SYNC = 8;
    public static final int CCSDS_TF_SYNC_FIELD_NUMBER = 8;
    private boolean hasCCSDSTFSYNC;
    private int cCSDSTFSYNC_ = 0;
    public boolean hasCCSDSTFSYNC() { return hasCCSDSTFSYNC; }
    public int getCCSDSTFSYNC() { return cCSDSTFSYNC_; }
    
    // required uint32 CCSDS_TF_ORDER = 9;
    public static final int CCSDS_TF_ORDER_FIELD_NUMBER = 9;
    private boolean hasCCSDSTFORDER;
    private int cCSDSTFORDER_ = 0;
    public boolean hasCCSDSTFORDER() { return hasCCSDSTFORDER; }
    public int getCCSDSTFORDER() { return cCSDSTFORDER_; }
    
    // required uint32 CCSDS_TF_SEGM = 10;
    public static final int CCSDS_TF_SEGM_FIELD_NUMBER = 10;
    private boolean hasCCSDSTFSEGM;
    private int cCSDSTFSEGM_ = 0;
    public boolean hasCCSDSTFSEGM() { return hasCCSDSTFSEGM; }
    public int getCCSDSTFSEGM() { return cCSDSTFSEGM_; }
    
    // required uint32 CCSDS_TF_FH = 11;
    public static final int CCSDS_TF_FH_FIELD_NUMBER = 11;
    private boolean hasCCSDSTFFH;
    private int cCSDSTFFH_ = 0;
    public boolean hasCCSDSTFFH() { return hasCCSDSTFFH; }
    public int getCCSDSTFFH() { return cCSDSTFFH_; }
    
    // required uint32 CCSDS_TF_HV = 12;
    public static final int CCSDS_TF_HV_FIELD_NUMBER = 12;
    private boolean hasCCSDSTFHV;
    private int cCSDSTFHV_ = 0;
    public boolean hasCCSDSTFHV() { return hasCCSDSTFHV; }
    public int getCCSDSTFHV() { return cCSDSTFHV_; }
    
    // required uint32 CCSDS_TF_HL = 13;
    public static final int CCSDS_TF_HL_FIELD_NUMBER = 13;
    private boolean hasCCSDSTFHL;
    private int cCSDSTFHL_ = 0;
    public boolean hasCCSDSTFHL() { return hasCCSDSTFHL; }
    public int getCCSDSTFHL() { return cCSDSTFHL_; }
    
    // repeated .commons.CCSDSPacket TMPackets = 14;
    public static final int TMPACKETS_FIELD_NUMBER = 14;
    private java.util.List<com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSPacket> tMPackets_ =
      java.util.Collections.emptyList();
    public java.util.List<com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSPacket> getTMPacketsList() {
      return tMPackets_;
    }
    public int getTMPacketsCount() { return tMPackets_.size(); }
    public com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSPacket getTMPackets(int index) {
      return tMPackets_.get(index);
    }
    
    // required uint32 CCSDS_TF_OC = 15;
    public static final int CCSDS_TF_OC_FIELD_NUMBER = 15;
    private boolean hasCCSDSTFOC;
    private int cCSDSTFOC_ = 0;
    public boolean hasCCSDSTFOC() { return hasCCSDSTFOC; }
    public int getCCSDSTFOC() { return cCSDSTFOC_; }
    
    // required uint32 CCSDS_TF_EC = 16;
    public static final int CCSDS_TF_EC_FIELD_NUMBER = 16;
    private boolean hasCCSDSTFEC;
    private int cCSDSTFEC_ = 0;
    public boolean hasCCSDSTFEC() { return hasCCSDSTFEC; }
    public int getCCSDSTFEC() { return cCSDSTFEC_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasCCSDSFVERSION) return false;
      if (!hasCCSDSSCID) return false;
      if (!hasCCSDSTFVC) return false;
      if (!hasCCSDSOPCTRL) return false;
      if (!hasCCSDSMSCNT) return false;
      if (!hasCCSDSVCCNT) return false;
      if (!hasCCSDSTFSECH) return false;
      if (!hasCCSDSTFSYNC) return false;
      if (!hasCCSDSTFORDER) return false;
      if (!hasCCSDSTFSEGM) return false;
      if (!hasCCSDSTFFH) return false;
      if (!hasCCSDSTFHV) return false;
      if (!hasCCSDSTFHL) return false;
      if (!hasCCSDSTFOC) return false;
      if (!hasCCSDSTFEC) return false;
      for (com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSPacket element : getTMPacketsList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasCCSDSFVERSION()) {
        output.writeUInt32(1, getCCSDSFVERSION());
      }
      if (hasCCSDSSCID()) {
        output.writeUInt32(2, getCCSDSSCID());
      }
      if (hasCCSDSTFVC()) {
        output.writeUInt32(3, getCCSDSTFVC());
      }
      if (hasCCSDSOPCTRL()) {
        output.writeUInt32(4, getCCSDSOPCTRL());
      }
      if (hasCCSDSMSCNT()) {
        output.writeUInt32(5, getCCSDSMSCNT());
      }
      if (hasCCSDSVCCNT()) {
        output.writeUInt32(6, getCCSDSVCCNT());
      }
      if (hasCCSDSTFSECH()) {
        output.writeUInt32(7, getCCSDSTFSECH());
      }
      if (hasCCSDSTFSYNC()) {
        output.writeUInt32(8, getCCSDSTFSYNC());
      }
      if (hasCCSDSTFORDER()) {
        output.writeUInt32(9, getCCSDSTFORDER());
      }
      if (hasCCSDSTFSEGM()) {
        output.writeUInt32(10, getCCSDSTFSEGM());
      }
      if (hasCCSDSTFFH()) {
        output.writeUInt32(11, getCCSDSTFFH());
      }
      if (hasCCSDSTFHV()) {
        output.writeUInt32(12, getCCSDSTFHV());
      }
      if (hasCCSDSTFHL()) {
        output.writeUInt32(13, getCCSDSTFHL());
      }
      for (com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSPacket element : getTMPacketsList()) {
        output.writeMessage(14, element);
      }
      if (hasCCSDSTFOC()) {
        output.writeUInt32(15, getCCSDSTFOC());
      }
      if (hasCCSDSTFEC()) {
        output.writeUInt32(16, getCCSDSTFEC());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasCCSDSFVERSION()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, getCCSDSFVERSION());
      }
      if (hasCCSDSSCID()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, getCCSDSSCID());
      }
      if (hasCCSDSTFVC()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, getCCSDSTFVC());
      }
      if (hasCCSDSOPCTRL()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, getCCSDSOPCTRL());
      }
      if (hasCCSDSMSCNT()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, getCCSDSMSCNT());
      }
      if (hasCCSDSVCCNT()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, getCCSDSVCCNT());
      }
      if (hasCCSDSTFSECH()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, getCCSDSTFSECH());
      }
      if (hasCCSDSTFSYNC()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, getCCSDSTFSYNC());
      }
      if (hasCCSDSTFORDER()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, getCCSDSTFORDER());
      }
      if (hasCCSDSTFSEGM()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, getCCSDSTFSEGM());
      }
      if (hasCCSDSTFFH()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, getCCSDSTFFH());
      }
      if (hasCCSDSTFHV()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, getCCSDSTFHV());
      }
      if (hasCCSDSTFHL()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(13, getCCSDSTFHL());
      }
      for (com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSPacket element : getTMPacketsList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, element);
      }
      if (hasCCSDSTFOC()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(15, getCCSDSTFOC());
      }
      if (hasCCSDSTFEC()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(16, getCCSDSTFEC());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSFrame parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSFrame parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSFrame parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSFrame parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSFrame parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSFrame parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSFrame parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSFrame parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSFrame parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSFrame parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSFrame prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSFrame result;
      
      // Construct using com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSFrame.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSFrame();
        return builder;
      }
      
      protected com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSFrame internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSFrame();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSFrame.getDescriptor();
      }
      
      public com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSFrame getDefaultInstanceForType() {
        return com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSFrame.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSFrame build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSFrame buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSFrame buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.tMPackets_ != java.util.Collections.EMPTY_LIST) {
          result.tMPackets_ =
            java.util.Collections.unmodifiableList(result.tMPackets_);
        }
        com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSFrame returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSFrame) {
          return mergeFrom((com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSFrame)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSFrame other) {
        if (other == com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSFrame.getDefaultInstance()) return this;
        if (other.hasCCSDSFVERSION()) {
          setCCSDSFVERSION(other.getCCSDSFVERSION());
        }
        if (other.hasCCSDSSCID()) {
          setCCSDSSCID(other.getCCSDSSCID());
        }
        if (other.hasCCSDSTFVC()) {
          setCCSDSTFVC(other.getCCSDSTFVC());
        }
        if (other.hasCCSDSOPCTRL()) {
          setCCSDSOPCTRL(other.getCCSDSOPCTRL());
        }
        if (other.hasCCSDSMSCNT()) {
          setCCSDSMSCNT(other.getCCSDSMSCNT());
        }
        if (other.hasCCSDSVCCNT()) {
          setCCSDSVCCNT(other.getCCSDSVCCNT());
        }
        if (other.hasCCSDSTFSECH()) {
          setCCSDSTFSECH(other.getCCSDSTFSECH());
        }
        if (other.hasCCSDSTFSYNC()) {
          setCCSDSTFSYNC(other.getCCSDSTFSYNC());
        }
        if (other.hasCCSDSTFORDER()) {
          setCCSDSTFORDER(other.getCCSDSTFORDER());
        }
        if (other.hasCCSDSTFSEGM()) {
          setCCSDSTFSEGM(other.getCCSDSTFSEGM());
        }
        if (other.hasCCSDSTFFH()) {
          setCCSDSTFFH(other.getCCSDSTFFH());
        }
        if (other.hasCCSDSTFHV()) {
          setCCSDSTFHV(other.getCCSDSTFHV());
        }
        if (other.hasCCSDSTFHL()) {
          setCCSDSTFHL(other.getCCSDSTFHL());
        }
        if (!other.tMPackets_.isEmpty()) {
          if (result.tMPackets_.isEmpty()) {
            result.tMPackets_ = new java.util.ArrayList<com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSPacket>();
          }
          result.tMPackets_.addAll(other.tMPackets_);
        }
        if (other.hasCCSDSTFOC()) {
          setCCSDSTFOC(other.getCCSDSTFOC());
        }
        if (other.hasCCSDSTFEC()) {
          setCCSDSTFEC(other.getCCSDSTFEC());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setCCSDSFVERSION(input.readUInt32());
              break;
            }
            case 16: {
              setCCSDSSCID(input.readUInt32());
              break;
            }
            case 24: {
              setCCSDSTFVC(input.readUInt32());
              break;
            }
            case 32: {
              setCCSDSOPCTRL(input.readUInt32());
              break;
            }
            case 40: {
              setCCSDSMSCNT(input.readUInt32());
              break;
            }
            case 48: {
              setCCSDSVCCNT(input.readUInt32());
              break;
            }
            case 56: {
              setCCSDSTFSECH(input.readUInt32());
              break;
            }
            case 64: {
              setCCSDSTFSYNC(input.readUInt32());
              break;
            }
            case 72: {
              setCCSDSTFORDER(input.readUInt32());
              break;
            }
            case 80: {
              setCCSDSTFSEGM(input.readUInt32());
              break;
            }
            case 88: {
              setCCSDSTFFH(input.readUInt32());
              break;
            }
            case 96: {
              setCCSDSTFHV(input.readUInt32());
              break;
            }
            case 104: {
              setCCSDSTFHL(input.readUInt32());
              break;
            }
            case 114: {
              com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSPacket.Builder subBuilder = com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSPacket.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addTMPackets(subBuilder.buildPartial());
              break;
            }
            case 120: {
              setCCSDSTFOC(input.readUInt32());
              break;
            }
            case 128: {
              setCCSDSTFEC(input.readUInt32());
              break;
            }
          }
        }
      }
      
      
      // required uint32 CCSDS_FVERSION = 1;
      public boolean hasCCSDSFVERSION() {
        return result.hasCCSDSFVERSION();
      }
      public int getCCSDSFVERSION() {
        return result.getCCSDSFVERSION();
      }
      public Builder setCCSDSFVERSION(int value) {
        result.hasCCSDSFVERSION = true;
        result.cCSDSFVERSION_ = value;
        return this;
      }
      public Builder clearCCSDSFVERSION() {
        result.hasCCSDSFVERSION = false;
        result.cCSDSFVERSION_ = 0;
        return this;
      }
      
      // required uint32 CCSDS_SC_ID = 2;
      public boolean hasCCSDSSCID() {
        return result.hasCCSDSSCID();
      }
      public int getCCSDSSCID() {
        return result.getCCSDSSCID();
      }
      public Builder setCCSDSSCID(int value) {
        result.hasCCSDSSCID = true;
        result.cCSDSSCID_ = value;
        return this;
      }
      public Builder clearCCSDSSCID() {
        result.hasCCSDSSCID = false;
        result.cCSDSSCID_ = 0;
        return this;
      }
      
      // required uint32 CCSDS_TF_VC = 3;
      public boolean hasCCSDSTFVC() {
        return result.hasCCSDSTFVC();
      }
      public int getCCSDSTFVC() {
        return result.getCCSDSTFVC();
      }
      public Builder setCCSDSTFVC(int value) {
        result.hasCCSDSTFVC = true;
        result.cCSDSTFVC_ = value;
        return this;
      }
      public Builder clearCCSDSTFVC() {
        result.hasCCSDSTFVC = false;
        result.cCSDSTFVC_ = 0;
        return this;
      }
      
      // required uint32 CCSDS_OP_CTRL = 4;
      public boolean hasCCSDSOPCTRL() {
        return result.hasCCSDSOPCTRL();
      }
      public int getCCSDSOPCTRL() {
        return result.getCCSDSOPCTRL();
      }
      public Builder setCCSDSOPCTRL(int value) {
        result.hasCCSDSOPCTRL = true;
        result.cCSDSOPCTRL_ = value;
        return this;
      }
      public Builder clearCCSDSOPCTRL() {
        result.hasCCSDSOPCTRL = false;
        result.cCSDSOPCTRL_ = 0;
        return this;
      }
      
      // required uint32 CCSDS_MS_CNT = 5;
      public boolean hasCCSDSMSCNT() {
        return result.hasCCSDSMSCNT();
      }
      public int getCCSDSMSCNT() {
        return result.getCCSDSMSCNT();
      }
      public Builder setCCSDSMSCNT(int value) {
        result.hasCCSDSMSCNT = true;
        result.cCSDSMSCNT_ = value;
        return this;
      }
      public Builder clearCCSDSMSCNT() {
        result.hasCCSDSMSCNT = false;
        result.cCSDSMSCNT_ = 0;
        return this;
      }
      
      // required uint32 CCSDS_VC_CNT = 6;
      public boolean hasCCSDSVCCNT() {
        return result.hasCCSDSVCCNT();
      }
      public int getCCSDSVCCNT() {
        return result.getCCSDSVCCNT();
      }
      public Builder setCCSDSVCCNT(int value) {
        result.hasCCSDSVCCNT = true;
        result.cCSDSVCCNT_ = value;
        return this;
      }
      public Builder clearCCSDSVCCNT() {
        result.hasCCSDSVCCNT = false;
        result.cCSDSVCCNT_ = 0;
        return this;
      }
      
      // required uint32 CCSDS_TF_SECH = 7;
      public boolean hasCCSDSTFSECH() {
        return result.hasCCSDSTFSECH();
      }
      public int getCCSDSTFSECH() {
        return result.getCCSDSTFSECH();
      }
      public Builder setCCSDSTFSECH(int value) {
        result.hasCCSDSTFSECH = true;
        result.cCSDSTFSECH_ = value;
        return this;
      }
      public Builder clearCCSDSTFSECH() {
        result.hasCCSDSTFSECH = false;
        result.cCSDSTFSECH_ = 0;
        return this;
      }
      
      // required uint32 CCSDS_TF_SYNC = 8;
      public boolean hasCCSDSTFSYNC() {
        return result.hasCCSDSTFSYNC();
      }
      public int getCCSDSTFSYNC() {
        return result.getCCSDSTFSYNC();
      }
      public Builder setCCSDSTFSYNC(int value) {
        result.hasCCSDSTFSYNC = true;
        result.cCSDSTFSYNC_ = value;
        return this;
      }
      public Builder clearCCSDSTFSYNC() {
        result.hasCCSDSTFSYNC = false;
        result.cCSDSTFSYNC_ = 0;
        return this;
      }
      
      // required uint32 CCSDS_TF_ORDER = 9;
      public boolean hasCCSDSTFORDER() {
        return result.hasCCSDSTFORDER();
      }
      public int getCCSDSTFORDER() {
        return result.getCCSDSTFORDER();
      }
      public Builder setCCSDSTFORDER(int value) {
        result.hasCCSDSTFORDER = true;
        result.cCSDSTFORDER_ = value;
        return this;
      }
      public Builder clearCCSDSTFORDER() {
        result.hasCCSDSTFORDER = false;
        result.cCSDSTFORDER_ = 0;
        return this;
      }
      
      // required uint32 CCSDS_TF_SEGM = 10;
      public boolean hasCCSDSTFSEGM() {
        return result.hasCCSDSTFSEGM();
      }
      public int getCCSDSTFSEGM() {
        return result.getCCSDSTFSEGM();
      }
      public Builder setCCSDSTFSEGM(int value) {
        result.hasCCSDSTFSEGM = true;
        result.cCSDSTFSEGM_ = value;
        return this;
      }
      public Builder clearCCSDSTFSEGM() {
        result.hasCCSDSTFSEGM = false;
        result.cCSDSTFSEGM_ = 0;
        return this;
      }
      
      // required uint32 CCSDS_TF_FH = 11;
      public boolean hasCCSDSTFFH() {
        return result.hasCCSDSTFFH();
      }
      public int getCCSDSTFFH() {
        return result.getCCSDSTFFH();
      }
      public Builder setCCSDSTFFH(int value) {
        result.hasCCSDSTFFH = true;
        result.cCSDSTFFH_ = value;
        return this;
      }
      public Builder clearCCSDSTFFH() {
        result.hasCCSDSTFFH = false;
        result.cCSDSTFFH_ = 0;
        return this;
      }
      
      // required uint32 CCSDS_TF_HV = 12;
      public boolean hasCCSDSTFHV() {
        return result.hasCCSDSTFHV();
      }
      public int getCCSDSTFHV() {
        return result.getCCSDSTFHV();
      }
      public Builder setCCSDSTFHV(int value) {
        result.hasCCSDSTFHV = true;
        result.cCSDSTFHV_ = value;
        return this;
      }
      public Builder clearCCSDSTFHV() {
        result.hasCCSDSTFHV = false;
        result.cCSDSTFHV_ = 0;
        return this;
      }
      
      // required uint32 CCSDS_TF_HL = 13;
      public boolean hasCCSDSTFHL() {
        return result.hasCCSDSTFHL();
      }
      public int getCCSDSTFHL() {
        return result.getCCSDSTFHL();
      }
      public Builder setCCSDSTFHL(int value) {
        result.hasCCSDSTFHL = true;
        result.cCSDSTFHL_ = value;
        return this;
      }
      public Builder clearCCSDSTFHL() {
        result.hasCCSDSTFHL = false;
        result.cCSDSTFHL_ = 0;
        return this;
      }
      
      // repeated .commons.CCSDSPacket TMPackets = 14;
      public java.util.List<com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSPacket> getTMPacketsList() {
        return java.util.Collections.unmodifiableList(result.tMPackets_);
      }
      public int getTMPacketsCount() {
        return result.getTMPacketsCount();
      }
      public com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSPacket getTMPackets(int index) {
        return result.getTMPackets(index);
      }
      public Builder setTMPackets(int index, com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSPacket value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.tMPackets_.set(index, value);
        return this;
      }
      public Builder setTMPackets(int index, com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSPacket.Builder builderForValue) {
        result.tMPackets_.set(index, builderForValue.build());
        return this;
      }
      public Builder addTMPackets(com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSPacket value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.tMPackets_.isEmpty()) {
          result.tMPackets_ = new java.util.ArrayList<com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSPacket>();
        }
        result.tMPackets_.add(value);
        return this;
      }
      public Builder addTMPackets(com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSPacket.Builder builderForValue) {
        if (result.tMPackets_.isEmpty()) {
          result.tMPackets_ = new java.util.ArrayList<com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSPacket>();
        }
        result.tMPackets_.add(builderForValue.build());
        return this;
      }
      public Builder addAllTMPackets(
          java.lang.Iterable<? extends com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSPacket> values) {
        if (result.tMPackets_.isEmpty()) {
          result.tMPackets_ = new java.util.ArrayList<com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSPacket>();
        }
        super.addAll(values, result.tMPackets_);
        return this;
      }
      public Builder clearTMPackets() {
        result.tMPackets_ = java.util.Collections.emptyList();
        return this;
      }
      
      // required uint32 CCSDS_TF_OC = 15;
      public boolean hasCCSDSTFOC() {
        return result.hasCCSDSTFOC();
      }
      public int getCCSDSTFOC() {
        return result.getCCSDSTFOC();
      }
      public Builder setCCSDSTFOC(int value) {
        result.hasCCSDSTFOC = true;
        result.cCSDSTFOC_ = value;
        return this;
      }
      public Builder clearCCSDSTFOC() {
        result.hasCCSDSTFOC = false;
        result.cCSDSTFOC_ = 0;
        return this;
      }
      
      // required uint32 CCSDS_TF_EC = 16;
      public boolean hasCCSDSTFEC() {
        return result.hasCCSDSTFEC();
      }
      public int getCCSDSTFEC() {
        return result.getCCSDSTFEC();
      }
      public Builder setCCSDSTFEC(int value) {
        result.hasCCSDSTFEC = true;
        result.cCSDSTFEC_ = value;
        return this;
      }
      public Builder clearCCSDSTFEC() {
        result.hasCCSDSTFEC = false;
        result.cCSDSTFEC_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:commons.CCSDSFrame)
    }
    
    static {
      defaultInstance = new CCSDSFrame(true);
      com.logica.hummingbird.commons.CCSDSMessageTypes.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:commons.CCSDSFrame)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_commons_CCSDSParameter_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_commons_CCSDSParameter_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_commons_CCSDSPacket_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_commons_CCSDSPacket_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_commons_CCSDSFrame_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_commons_CCSDSFrame_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\027CCSDSMessageTypes.proto\022\007commons\"-\n\016CC" +
      "SDSParameter\022\014\n\004name\030\001 \002(\t\022\r\n\005value\030\002 \002(" +
      "\t\"\323\001\n\013CCSDSPacket\022\025\n\rCCSDS_VERSION\030\001 \002(\r" +
      "\022\022\n\nCCSDS_TYPE\030\002 \002(\r\022\024\n\014CCSDS_SEC_HD\030\003 \002" +
      "(\r\022\022\n\nCCSDS_APID\030\004 \002(\r\022\026\n\016CCSDS_GP_FLAGS" +
      "\030\005 \002(\r\022\021\n\tCCSDS_SSC\030\006 \002(\r\022\025\n\rCCSDS_PLENG" +
      "TH\030\007 \002(\r\022-\n\014TMParameters\030\010 \003(\0132\027.commons" +
      ".CCSDSParameter\"\200\003\n\nCCSDSFrame\022\026\n\016CCSDS_" +
      "FVERSION\030\001 \002(\r\022\023\n\013CCSDS_SC_ID\030\002 \002(\r\022\023\n\013C" +
      "CSDS_TF_VC\030\003 \002(\r\022\025\n\rCCSDS_OP_CTRL\030\004 \002(\r\022",
      "\024\n\014CCSDS_MS_CNT\030\005 \002(\r\022\024\n\014CCSDS_VC_CNT\030\006 " +
      "\002(\r\022\025\n\rCCSDS_TF_SECH\030\007 \002(\r\022\025\n\rCCSDS_TF_S" +
      "YNC\030\010 \002(\r\022\026\n\016CCSDS_TF_ORDER\030\t \002(\r\022\025\n\rCCS" +
      "DS_TF_SEGM\030\n \002(\r\022\023\n\013CCSDS_TF_FH\030\013 \002(\r\022\023\n" +
      "\013CCSDS_TF_HV\030\014 \002(\r\022\023\n\013CCSDS_TF_HL\030\r \002(\r\022" +
      "\'\n\tTMPackets\030\016 \003(\0132\024.commons.CCSDSPacket" +
      "\022\023\n\013CCSDS_TF_OC\030\017 \002(\r\022\023\n\013CCSDS_TF_EC\030\020 \002" +
      "(\rB3\n\036com.logica.hummingbird.commonsB\021CC" +
      "SDSMessageTypes"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_commons_CCSDSParameter_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_commons_CCSDSParameter_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_commons_CCSDSParameter_descriptor,
              new java.lang.String[] { "Name", "Value", },
              com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSParameter.class,
              com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSParameter.Builder.class);
          internal_static_commons_CCSDSPacket_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_commons_CCSDSPacket_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_commons_CCSDSPacket_descriptor,
              new java.lang.String[] { "CCSDSVERSION", "CCSDSTYPE", "CCSDSSECHD", "CCSDSAPID", "CCSDSGPFLAGS", "CCSDSSSC", "CCSDSPLENGTH", "TMParameters", },
              com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSPacket.class,
              com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSPacket.Builder.class);
          internal_static_commons_CCSDSFrame_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_commons_CCSDSFrame_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_commons_CCSDSFrame_descriptor,
              new java.lang.String[] { "CCSDSFVERSION", "CCSDSSCID", "CCSDSTFVC", "CCSDSOPCTRL", "CCSDSMSCNT", "CCSDSVCCNT", "CCSDSTFSECH", "CCSDSTFSYNC", "CCSDSTFORDER", "CCSDSTFSEGM", "CCSDSTFFH", "CCSDSTFHV", "CCSDSTFHL", "TMPackets", "CCSDSTFOC", "CCSDSTFEC", },
              com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSFrame.class,
              com.logica.hummingbird.commons.CCSDSMessageTypes.CCSDSFrame.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
