package com.logica.hummingbird.parameterarchive;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class ParameterExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table parameter
     *
     * @ibatorgenerated Tue Jan 12 00:04:48 CET 2010
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table parameter
     *
     * @ibatorgenerated Tue Jan 12 00:04:48 CET 2010
     */
    protected List oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table parameter
     *
     * @ibatorgenerated Tue Jan 12 00:04:48 CET 2010
     */
    public ParameterExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table parameter
     *
     * @ibatorgenerated Tue Jan 12 00:04:48 CET 2010
     */
    protected ParameterExample(ParameterExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table parameter
     *
     * @ibatorgenerated Tue Jan 12 00:04:48 CET 2010
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table parameter
     *
     * @ibatorgenerated Tue Jan 12 00:04:48 CET 2010
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table parameter
     *
     * @ibatorgenerated Tue Jan 12 00:04:48 CET 2010
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table parameter
     *
     * @ibatorgenerated Tue Jan 12 00:04:48 CET 2010
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table parameter
     *
     * @ibatorgenerated Tue Jan 12 00:04:48 CET 2010
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table parameter
     *
     * @ibatorgenerated Tue Jan 12 00:04:48 CET 2010
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table parameter
     *
     * @ibatorgenerated Tue Jan 12 00:04:48 CET 2010
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table parameter
     *
     * @ibatorgenerated Tue Jan 12 00:04:48 CET 2010
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List dateList = new ArrayList();
            Iterator iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(((Date)iter.next()).getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andOnboardCreationTimeIsNull() {
            addCriterion("onboard_creation_time is null");
            return this;
        }

        public Criteria andOnboardCreationTimeIsNotNull() {
            addCriterion("onboard_creation_time is not null");
            return this;
        }

        public Criteria andOnboardCreationTimeEqualTo(Date value) {
            addCriterionForJDBCDate("onboard_creation_time =", value, "onboardCreationTime");
            return this;
        }

        public Criteria andOnboardCreationTimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("onboard_creation_time <>", value, "onboardCreationTime");
            return this;
        }

        public Criteria andOnboardCreationTimeGreaterThan(Date value) {
            addCriterionForJDBCDate("onboard_creation_time >", value, "onboardCreationTime");
            return this;
        }

        public Criteria andOnboardCreationTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("onboard_creation_time >=", value, "onboardCreationTime");
            return this;
        }

        public Criteria andOnboardCreationTimeLessThan(Date value) {
            addCriterionForJDBCDate("onboard_creation_time <", value, "onboardCreationTime");
            return this;
        }

        public Criteria andOnboardCreationTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("onboard_creation_time <=", value, "onboardCreationTime");
            return this;
        }

        public Criteria andOnboardCreationTimeIn(List values) {
            addCriterionForJDBCDate("onboard_creation_time in", values, "onboardCreationTime");
            return this;
        }

        public Criteria andOnboardCreationTimeNotIn(List values) {
            addCriterionForJDBCDate("onboard_creation_time not in", values, "onboardCreationTime");
            return this;
        }

        public Criteria andOnboardCreationTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("onboard_creation_time between", value1, value2, "onboardCreationTime");
            return this;
        }

        public Criteria andOnboardCreationTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("onboard_creation_time not between", value1, value2, "onboardCreationTime");
            return this;
        }

        public Criteria andOngroundReceptionTimeIsNull() {
            addCriterion("onground_reception_time is null");
            return this;
        }

        public Criteria andOngroundReceptionTimeIsNotNull() {
            addCriterion("onground_reception_time is not null");
            return this;
        }

        public Criteria andOngroundReceptionTimeEqualTo(Date value) {
            addCriterion("onground_reception_time =", value, "ongroundReceptionTime");
            return this;
        }

        public Criteria andOngroundReceptionTimeNotEqualTo(Date value) {
            addCriterion("onground_reception_time <>", value, "ongroundReceptionTime");
            return this;
        }

        public Criteria andOngroundReceptionTimeGreaterThan(Date value) {
            addCriterion("onground_reception_time >", value, "ongroundReceptionTime");
            return this;
        }

        public Criteria andOngroundReceptionTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("onground_reception_time >=", value, "ongroundReceptionTime");
            return this;
        }

        public Criteria andOngroundReceptionTimeLessThan(Date value) {
            addCriterion("onground_reception_time <", value, "ongroundReceptionTime");
            return this;
        }

        public Criteria andOngroundReceptionTimeLessThanOrEqualTo(Date value) {
            addCriterion("onground_reception_time <=", value, "ongroundReceptionTime");
            return this;
        }

        public Criteria andOngroundReceptionTimeIn(List values) {
            addCriterion("onground_reception_time in", values, "ongroundReceptionTime");
            return this;
        }

        public Criteria andOngroundReceptionTimeNotIn(List values) {
            addCriterion("onground_reception_time not in", values, "ongroundReceptionTime");
            return this;
        }

        public Criteria andOngroundReceptionTimeBetween(Date value1, Date value2) {
            addCriterion("onground_reception_time between", value1, value2, "ongroundReceptionTime");
            return this;
        }

        public Criteria andOngroundReceptionTimeNotBetween(Date value1, Date value2) {
            addCriterion("onground_reception_time not between", value1, value2, "ongroundReceptionTime");
            return this;
        }

        public Criteria andParameterIdIsNull() {
            addCriterion("parameter_id is null");
            return this;
        }

        public Criteria andParameterIdIsNotNull() {
            addCriterion("parameter_id is not null");
            return this;
        }

        public Criteria andParameterIdEqualTo(Long value) {
            addCriterion("parameter_id =", value, "parameterId");
            return this;
        }

        public Criteria andParameterIdNotEqualTo(Long value) {
            addCriterion("parameter_id <>", value, "parameterId");
            return this;
        }

        public Criteria andParameterIdGreaterThan(Long value) {
            addCriterion("parameter_id >", value, "parameterId");
            return this;
        }

        public Criteria andParameterIdGreaterThanOrEqualTo(Long value) {
            addCriterion("parameter_id >=", value, "parameterId");
            return this;
        }

        public Criteria andParameterIdLessThan(Long value) {
            addCriterion("parameter_id <", value, "parameterId");
            return this;
        }

        public Criteria andParameterIdLessThanOrEqualTo(Long value) {
            addCriterion("parameter_id <=", value, "parameterId");
            return this;
        }

        public Criteria andParameterIdIn(List values) {
            addCriterion("parameter_id in", values, "parameterId");
            return this;
        }

        public Criteria andParameterIdNotIn(List values) {
            addCriterion("parameter_id not in", values, "parameterId");
            return this;
        }

        public Criteria andParameterIdBetween(Long value1, Long value2) {
            addCriterion("parameter_id between", value1, value2, "parameterId");
            return this;
        }

        public Criteria andParameterIdNotBetween(Long value1, Long value2) {
            addCriterion("parameter_id not between", value1, value2, "parameterId");
            return this;
        }

        public Criteria andPacketIdIsNull() {
            addCriterion("packet_id is null");
            return this;
        }

        public Criteria andPacketIdIsNotNull() {
            addCriterion("packet_id is not null");
            return this;
        }

        public Criteria andPacketIdEqualTo(Long value) {
            addCriterion("packet_id =", value, "packetId");
            return this;
        }

        public Criteria andPacketIdNotEqualTo(Long value) {
            addCriterion("packet_id <>", value, "packetId");
            return this;
        }

        public Criteria andPacketIdGreaterThan(Long value) {
            addCriterion("packet_id >", value, "packetId");
            return this;
        }

        public Criteria andPacketIdGreaterThanOrEqualTo(Long value) {
            addCriterion("packet_id >=", value, "packetId");
            return this;
        }

        public Criteria andPacketIdLessThan(Long value) {
            addCriterion("packet_id <", value, "packetId");
            return this;
        }

        public Criteria andPacketIdLessThanOrEqualTo(Long value) {
            addCriterion("packet_id <=", value, "packetId");
            return this;
        }

        public Criteria andPacketIdIn(List values) {
            addCriterion("packet_id in", values, "packetId");
            return this;
        }

        public Criteria andPacketIdNotIn(List values) {
            addCriterion("packet_id not in", values, "packetId");
            return this;
        }

        public Criteria andPacketIdBetween(Long value1, Long value2) {
            addCriterion("packet_id between", value1, value2, "packetId");
            return this;
        }

        public Criteria andPacketIdNotBetween(Long value1, Long value2) {
            addCriterion("packet_id not between", value1, value2, "packetId");
            return this;
        }

        public Criteria andValueIsNull() {
            addCriterion("Value is null");
            return this;
        }

        public Criteria andValueIsNotNull() {
            addCriterion("Value is not null");
            return this;
        }

        public Criteria andValueEqualTo(Float value) {
            addCriterion("Value =", value, "value");
            return this;
        }

        public Criteria andValueNotEqualTo(Float value) {
            addCriterion("Value <>", value, "value");
            return this;
        }

        public Criteria andValueGreaterThan(Float value) {
            addCriterion("Value >", value, "value");
            return this;
        }

        public Criteria andValueGreaterThanOrEqualTo(Float value) {
            addCriterion("Value >=", value, "value");
            return this;
        }

        public Criteria andValueLessThan(Float value) {
            addCriterion("Value <", value, "value");
            return this;
        }

        public Criteria andValueLessThanOrEqualTo(Float value) {
            addCriterion("Value <=", value, "value");
            return this;
        }

        public Criteria andValueIn(List values) {
            addCriterion("Value in", values, "value");
            return this;
        }

        public Criteria andValueNotIn(List values) {
            addCriterion("Value not in", values, "value");
            return this;
        }

        public Criteria andValueBetween(Float value1, Float value2) {
            addCriterion("Value between", value1, value2, "value");
            return this;
        }

        public Criteria andValueNotBetween(Float value1, Float value2) {
            addCriterion("Value not between", value1, value2, "value");
            return this;
        }
    }
}