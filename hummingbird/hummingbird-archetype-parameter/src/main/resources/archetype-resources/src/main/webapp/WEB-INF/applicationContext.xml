#set( $symbol_pound = '#' )
#set( $symbol_dollar = '$' )
#set( $symbol_escape = '\' )
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context-2.5.xsd
       http://camel.apache.org/schema/spring 
       http://camel.apache.org/schema/spring/camel-spring.xsd">

	<!-- Ensure that the annotations in the code are processed. -->
	<context:annotation-config />

	<bean id="jmsConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<property name="brokerURL" value="tcp://localhost:61616" />
	</bean>

	<bean id="pooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory">
		<property name="maxConnections" value="8" />
		<property name="maximumActive" value="500" />
		<property name="connectionFactory" ref="jmsConnectionFactory" />
	</bean>

	<bean id="jmsConfig" class="org.apache.camel.component.jms.JmsConfiguration">
		<property name="connectionFactory" ref="pooledConnectionFactory" />
		<property name="transacted" value="false" />
		<property name="concurrentConsumers" value="10" />
	</bean>

	<bean id="activemq" class="org.apache.activemq.camel.component.ActiveMQComponent">
		<property name="configuration" ref="jmsConfig" />
	</bean>

	<!-- Create the bean. -->
	<bean id="myBean" class="com.logica.hummingbird.${package}.ParameterProcessor"/>

	<!-- The context. Notice that the context and the producer are both named. This allows the @Autowired annotation
	to be used in the Processor. -->
	<camelContext id="context" xmlns="http://camel.apache.org/schema/spring">
		<template id="producer"/>

	
		<!-- Route for receiving the parameters with Name='someParameterName' from 
		     the activemq topic 'Parameter', let the bean process it, and forward
		     a parameter back to the Parameter topic. -->
		<route>
			<from uri="activemq:topic:Parameter?selector=Name='someParameterName'"/>
			<to uri="bean:myBean?method=process"/>
			<to uri="activemq:topic:Parameters"/>			
		</route>
	</camelContext>
</beans>